{"version":3,"sources":["assets/Conversation.module.css","assets/ConversationsItem.module.css","assets/ConversationsList.module.css","assets/MessageBubble.module.css","assets/twilio-mark-red.svg","WhatsappIcon.js","ChatIcon.js","MessageBubble.js","ConversationsMessages.js","Conversation.js","LoginPage.jsx","ConversationsList.js","utils/class-name.js","HeaderItem.js","ConversationsApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTwilioMarkRed","_ref","svgRef","title","titleId","props","className","fill","xmlns","viewBox","width","height","ref","id","d","ForwardRef","WhatsappIcon","render","PureComponent","ChatIcon","MessageBubble","componentDidMount","a","state","message","getParticipant","type","setState","hasMedia","media","getContentTemporaryUrl","then","url","mediaUrl","catch","e","mediaDownloadFailed","document","getElementById","sid","scrollIntoView","behavior","direction","itemStyle","styles","received_msg","divStyle","received_withd_msg","outgoing_msg","sent_msg","m","console","log","style","fontSize","component","author","medias","hasFailed","body","time_date","timestamp","toLocaleString","prevProps","prevState","snapshot","Component","Media","placeholder","onClick","Modal","info","centered","icon","okText","content","picture_container","src","display","flexDirection","media_icon","zIndex","position","opacity","picture_preview","backgroundImage","ConversationsMessages","messages","map","identity","index","Conversation","loadMessagesFor","thisConversation","conversationProxy","getMessages","messagePaginator","items","loadingState","err","error","boundConversations","has","newConversation","on","messageAdded","Set","componentDidUpdate","oldProps","oldState","targetConversation","onMessageChanged","event","newMessage","value","sendMessage","preventDefault","onDrop","acceptedFiles","contentType","accept","getRootProps","getInputProps","isDragActive","top","drop","color","filter","flexBasis","flexGrow","flexShrink","overflowY","myIdentity","onSubmit","Group","compact","name","autoComplete","disabled","onChange","htmlType","newProps","Content","Layout","LoginPage","handleSubmit","form","validateFields","values","username","usernameFieldDecorator","getFieldDecorator","rules","required","justify","align","span","offset","maxWidth","marginBottom","Item","prefix","block","React","Form","create","Text","Typography","ConversationsList","conversations","selectedConversationSid","onConversationClick","header","conversationsListStyles","bordered","loading","dataSource","renderItem","item","activeChannel","conversationItemClassName","conversationsItemStyles","Boolean","join","strong","friendlyName","HeaderItem","children","finalStyle","padding","Sider","Header","ConversationsApp","loggedIn","getToken","statusString","logIn","localStorage","setItem","logOut","token","conversationsReady","removeItem","conversationsClient","shutdown","initConversations","window","ConversationsClient","status","conversation","it","getItem","conversationContent","selectedConversation","find","alignItems","paddingRight","float","marginLeft","dot","theme","App","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aac7e2c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropzone\":\"Conversation_Dropzone__15hnk\",\"drop\":\"Conversation_drop__2apuC\",\"active\":\"Conversation_active__1BNWw\",\"messages\":\"Conversation_messages__1KgS7\",\"Highlight\":\"Conversation_Highlight__1jIO5\",\"type-a-message\":\"Conversation_type-a-message__2ks33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversation-item\":\"ConversationsItem_conversation-item__1DIn_\",\"conversation-item--active\":\"ConversationsItem_conversation-item--active__39CfD\",\"conversation-item-text\":\"ConversationsItem_conversation-item-text__2VjQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-channels-list\":\"ConversationsList_chat-channels-list__228lf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"incoming_msg_img\":\"MessageBubble_incoming_msg_img__2NTPH\",\"received_msg\":\"MessageBubble_received_msg__29axb\",\"received_withd_msg\":\"MessageBubble_received_withd_msg__2MC6p\",\"time_date\":\"MessageBubble_time_date__3sfzs\",\"sent_msg\":\"MessageBubble_sent_msg__Il0B-\",\"outgoing_msg\":\"MessageBubble_outgoing_msg__1yX32\",\"input_msg_write\":\"MessageBubble_input_msg_write__2C3Y9\",\"image\":\"MessageBubble_image__3ovCZ\",\"picture_preview\":\"MessageBubble_picture_preview__Xdxpt\",\"media_icon\":\"MessageBubble_media_icon__27H33\",\"picture_container\":\"MessageBubble_picture_container__h5Eje\",\"media\":\"MessageBubble_media__3tn1o\",\"placeholder\":\"MessageBubble_placeholder__1ib-9\",\"medias\":\"MessageBubble_medias__1QOlg\"};","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTwilioMarkRed(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"twilio-mark\",\n    fill: \"#F22F46\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 30 30\",\n    width: 30,\n    height: 30,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 0C6.7 0 0 6.7 0 15s6.7 15 15 15 15-6.7 15-15S23.3 0 15 0zm0 26C8.9 26 4 21.1 4 15S8.9 4 15 4s11 4.9 11 11-4.9 11-11 11zm6.8-14.7c0 1.7-1.4 3.1-3.1 3.1s-3.1-1.4-3.1-3.1 1.4-3.1 3.1-3.1 3.1 1.4 3.1 3.1zm0 7.4c0 1.7-1.4 3.1-3.1 3.1s-3.1-1.4-3.1-3.1c0-1.7 1.4-3.1 3.1-3.1s3.1 1.4 3.1 3.1zm-7.4 0c0 1.7-1.4 3.1-3.1 3.1s-3.1-1.4-3.1-3.1c0-1.7 1.4-3.1 3.1-3.1s3.1 1.4 3.1 3.1zm0-7.4c0 1.7-1.4 3.1-3.1 3.1S8.2 13 8.2 11.3s1.4-3.1 3.1-3.1 3.1 1.4 3.1 3.1z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTwilioMarkRed);\nexport default __webpack_public_path__ + \"static/media/twilio-mark-red.09b78559.svg\";\nexport { ForwardRef as ReactComponent };","import React, {PureComponent} from \"react\";\n\nexport default class WhatsappIcon extends PureComponent {\n  render = () => {\n    return (\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 90 90\">\n          <path fill=\"currentColor\" d={`M90,43.841c0,24.213-19.779,43.841-44.182,43.841c-7.747,0-15.025-1.98-21.357-5.455L0,90l7.975-23.522c-4.023-6.606-6.34-14.354-6.34-22.637C1.635,19.628,21.416,0,45.818,0C70.223,0,90,19.628,90,43.841z M45.818,6.982c-20.484,0-37.146,16.535-37.146,36.859c0,8.065,2.629,15.534,7.076,21.61L11.107,79.14l14.275-4.537c5.865,3.851,12.891,6.097,20.437,6.097c20.481,0,37.146-16.533,37.146-36.857S66.301,6.982,45.818,6.982z M68.129,53.938c-0.273-0.447-0.994-0.717-2.076-1.254c-1.084-0.537-6.41-3.138-7.4-3.495c-0.993-0.358-1.717-0.538-2.438,0.537c-0.721,1.076-2.797,3.495-3.43,4.212c-0.632,0.719-1.263,0.809-2.347,0.271c-1.082-0.537-4.571-1.673-8.708-5.333c-3.219-2.848-5.393-6.364-6.025-7.441c-0.631-1.075-0.066-1.656,0.475-2.191c0.488-0.482,1.084-1.255,1.625-1.882c0.543-0.628,0.723-1.075,1.082-1.793c0.363-0.717,0.182-1.344-0.09-1.883c-0.27-0.537-2.438-5.825-3.34-7.977c-0.902-2.15-1.803-1.792-2.436-1.792c-0.631,0-1.354-0.09-2.076-0.09c-0.722,0-1.896,0.269-2.889,1.344c-0.992,1.076-3.789,3.676-3.789,8.963c0,5.288,3.879,10.397,4.422,11.113c0.541,0.716,7.49,11.92,18.5,16.223C58.2,65.771,58.2,64.336,60.186,64.156c1.984-0.179,6.406-2.599,7.312-5.107C68.398,56.537,68.398,54.386,68.129,53.938z`}>\n          </path>\n        </svg>\n    );\n  }\n}","import React, {PureComponent} from \"react\";\n\nexport default class ChatIcon extends PureComponent {\n  render = () => {\n    return (\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 1024 1024\">\n          <path fill=\"currentColor\" d={`M161.69,935.7060000000001C161.69,935.7060000000001,161.69,681.344,161.69,681.344C161.69,681.344,0,681.344,0,681.344C0,681.344,0,88.50000000000011,0,88.50000000000011C0,88.50000000000011,1024,88.50000000000011,1024,88.50000000000011C1024,88.50000000000011,1024,681.344,1024,681.344C1024,681.344,504.986,681.344,504.986,681.344C504.986,681.344,161.69,935.7060000000001,161.69,935.7060000000001C161.69,935.7060000000001,161.69,935.7060000000001,161.69,935.7060000000001M53.914,627.4310000000002C53.914,627.4310000000002,215.603,627.4310000000002,215.603,627.4310000000002C215.603,627.4310000000002,215.603,828.4420000000001,215.603,828.4420000000001C215.603,828.4420000000001,485.069,627.4310000000002,485.069,627.4310000000002C485.069,627.4310000000002,970.086,627.4310000000002,970.086,627.4310000000002C970.086,627.4310000000002,970.086,142.36200000000008,970.086,142.36200000000008C970.086,142.36200000000008,53.914,142.36200000000008,53.914,142.36200000000008C53.914,142.36200000000008,53.914,627.4310000000002,53.914,627.4310000000002C53.914,627.4310000000002,53.914,627.4310000000002,53.914,627.4310000000002M161.69,384.8960000000002C161.69,447.1560000000002,229.069,486.0160000000001,282.931,454.9380000000001C307.968,440.4480000000001,323.379,413.77300000000014,323.379,384.8960000000002C323.379,322.6880000000001,256,283.7760000000002,202.086,314.9060000000002C177.101,329.34400000000016,161.69,356.0200000000001,161.69,384.8960000000002M431.155,384.8960000000002C431.155,447.1560000000002,498.534,486.0160000000001,552.448,454.9380000000001C577.434,440.4480000000001,592.845,413.77300000000014,592.845,384.8960000000002C592.845,322.6880000000001,525.466,283.7760000000002,471.603,314.9060000000002C446.566,329.34400000000016,431.155,356.0200000000001,431.155,384.8960000000002M700.621,384.8960000000002C700.621,447.1560000000002,768,486.0160000000001,821.914,454.9380000000001C846.899,440.4480000000001,862.31,413.77300000000014,862.31,384.8960000000002C862.31,322.6880000000001,794.931,283.7760000000002,741.069,314.9060000000002C716.032,329.34400000000016,700.621,356.0200000000001,700.621,384.8960000000002`}>\n          </path>\n        </svg>\n    );\n  }\n}","import React, { Component, PureComponent } from \"react\";\nimport styles from \"./assets/MessageBubble.module.css\";\nimport PropTypes from \"prop-types\";\nimport { Spin, Modal, Icon } from \"antd\";\nimport WhatsappIcon from \"./WhatsappIcon\";\nimport ChatIcon from \"./ChatIcon\";\n\nclass MessageBubble extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasMedia: this.props.message.type === \"media\",\n      mediaDownloadFailed: false,\n      mediaUrl: null\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setState({\n      ...this.state,\n      type: (await this.props.message.getParticipant()).type\n    });\n    if (this.state.hasMedia) {\n      this.props.message.media\n        .getContentTemporaryUrl()\n        .then((url) => {\n          this.setState({ mediaUrl: url });\n        })\n        .catch((e) => this.setState({ mediaDownloadFailed: true }));\n    }\n    document\n      .getElementById(this.props.message.sid)\n      .scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    document\n      .getElementById(this.props.message.sid)\n      .scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  render = () => {\n    const { itemStyle, divStyle } =\n      this.props.direction === \"incoming\"\n        ? {\n            itemStyle: styles.received_msg,\n            divStyle: styles.received_withd_msg\n          }\n        : { itemStyle: styles.outgoing_msg, divStyle: styles.sent_msg };\n\n    const m = this.props.message;\n    const type = this.state.type;\n\n    if (this.state.hasMedia) {\n      console.log(\"Message is media message\");\n      // log media properties\n      console.log(\"Media properties\", m.media);\n    }\n    console.log(m);\n    return (\n      <li id={m.sid} className={itemStyle}>\n        <div className={divStyle}>\n          <div>\n            <strong>\n              {type === \"whatsapp\" && (\n                <Icon style={{ fontSize: \"16px\" }} component={WhatsappIcon} />\n              )}\n              {type === \"chat\" && (\n                <Icon style={{ fontSize: \"16px\" }} component={ChatIcon} />\n              )}\n              {type === \"sms\" && <Icon type={\"mobile\"} />}\n              {` ${m.author}`}\n            </strong>\n\n            <br />\n            <div className={styles.medias}>\n              {this.state.hasMedia && (\n                <Media\n                  hasFailed={this.state.mediaDownloadFailed}\n                  url={this.state.mediaUrl}\n                />\n              )}\n            </div>\n            {m.body}\n          </div>\n          <span className={styles.time_date}>\n            {m.state.timestamp.toLocaleString()}\n          </span>\n        </div>\n      </li>\n    );\n  };\n}\n\nclass Media extends PureComponent {\n  render = () => {\n    const { hasFailed, url } = this.props;\n    return (\n      <div\n        className={`${styles.media}${!url ? \" \" + styles.placeholder : \"\"}`}\n        onClick={() => {\n          Modal.info({\n            centered: true,\n            icon: null,\n            okText: \"Close\",\n            width: \"60%\",\n            content: (\n              <div className={styles.picture_container}>\n                <img style={{ width: \"100%\", height: \"100%\" }} src={url} />\n              </div>\n            )\n          });\n        }}\n      >\n        {!url && !hasFailed && <Spin />}\n\n        {hasFailed && (\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <Icon type={\"warning\"} style={{ fontSize: \"5em\" }} />\n            <p>Failed to load media</p>\n          </div>\n        )}\n\n        {!hasFailed && url && (\n          <div className={styles.media_icon}>\n            <div style={{ zIndex: 123, position: \"absolute\" }}>\n              <Icon type={\"eye\"} style={{ fontSize: \"5em\", opacity: 0.3 }} />\n            </div>\n            <div\n              className={styles.picture_preview}\n              style={{ backgroundImage: `url(${url})`, zIndex: 122 }}\n            ></div>\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n\nMedia.propTypes = {\n  hasFailed: PropTypes.bool.isRequired,\n  url: PropTypes.string\n};\n\nexport default MessageBubble;\n","import MessageBubble from \"./MessageBubble\";\nimport React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ConversationsMessages extends PureComponent {\n  render = () => {\n    return (\n        <div id=\"messages\">\n          <ul>\n            { this.props.messages.map(m => {\n              if (m.author === this.props.identity)\n                return <MessageBubble key={m.index} direction=\"outgoing\" message={m} />;\n              else\n                return <MessageBubble key={m.index} direction=\"incoming\" message={m} />;\n            })\n            }\n          </ul>\n        </div>\n    );\n  }\n}\n\nConversationsMessages.propTypes = {\n  identity: PropTypes.string.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default ConversationsMessages;","import React, { Component } from 'react';\nimport './assets/Conversation.css';\nimport MessageBubble from './MessageBubble'\nimport Dropzone from 'react-dropzone';\nimport styles from './assets/Conversation.module.css'\nimport {Button, Form, Icon, Input} from \"antd\";\nimport ConversationsMessages from \"./ConversationsMessages\";\nimport PropTypes from \"prop-types\";\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        newMessage: '',\n        conversationProxy: props.conversationProxy,\n        messages: [],\n        loadingState: 'initializing',\n        boundConversations: new Set()\n    };\n  }\n\n  loadMessagesFor = (thisConversation) => {\n    if (this.state.conversationProxy === thisConversation) {\n        thisConversation.getMessages()\n            .then(messagePaginator => {\n                if (this.state.conversationProxy === thisConversation) {\n                    this.setState({ messages: messagePaginator.items, loadingState: 'ready' });\n                }\n            })\n            .catch(err => {\n                console.error(\"Couldn't fetch messages IMPLEMENT RETRY\", err);\n                this.setState({ loadingState: \"failed\" });\n            });\n    }\n  };\n\n  componentDidMount = () => {\n      if (this.state.conversationProxy) {\n        this.loadMessagesFor(this.state.conversationProxy);\n\n        if (!this.state.boundConversations.has(this.state.conversationProxy)) {\n            let newConversation = this.state.conversationProxy;\n            newConversation.on('messageAdded', m => this.messageAdded(m, newConversation));\n            this.setState({boundConversations: new Set([...this.state.boundConversations, newConversation])});\n        }\n      }\n  }\n\n  componentDidUpdate = (oldProps, oldState) => {\n    if (this.state.conversationProxy !== oldState.conversationProxy) {\n        this.loadMessagesFor(this.state.conversationProxy);\n\n        if (!this.state.boundConversations.has(this.state.conversationProxy)) {\n            let newConversation = this.state.conversationProxy;\n            newConversation.on('messageAdded', m => this.messageAdded(m, newConversation));\n            this.setState({boundConversations: new Set([...this.state.boundConversations, newConversation])});\n        }\n    }\n  };\n\n  static getDerivedStateFromProps(newProps, oldState) {\n    let logic = (oldState.loadingState === 'initializing') || oldState.conversationProxy !== newProps.conversationProxy;\n    if (logic) {\n      return { loadingState: 'loading messages', conversationProxy: newProps.conversationProxy };\n    } else {\n      return null;\n    }\n  }\n\n  messageAdded = (message, targetConversation) => {\n    if (targetConversation === this.state.conversationProxy)\n        this.setState((prevState, props) => ({\n            messages: [...prevState.messages, message]\n        }));\n  };\n\n  onMessageChanged = event => {\n    this.setState({ newMessage: event.target.value });\n  };\n\n  sendMessage = event => {\n    event.preventDefault();\n    const message = this.state.newMessage;\n    this.setState({ newMessage: '' });\n    this.state.conversationProxy.sendMessage(message);\n  };\n\n  onDrop = acceptedFiles => {\n    this.state.conversationProxy.sendMessage({contentType: acceptedFiles[0].type, media: acceptedFiles[0]});\n  };\n\n  render = () => {\n    return (\n        <Dropzone\n            onDrop={this.onDrop}\n            accept=\"image/*\">\n          {({getRootProps, getInputProps, isDragActive}) => (\n              <div\n                  {...getRootProps()}\n                  onClick={() => {\n                  }}\n                  id=\"OpenChannel\"\n                  style={{position: \"relative\", top: 0}}>\n\n                {isDragActive &&\n                <div className={styles.drop}>\n                  <Icon type={\"cloud-upload\"}\n                        style={{fontSize: \"5em\", color: \"#fefefe\"}}/>\n                  <h3 style={{color: \"#fefefe\"}}>Release to Upload</h3>\n                </div>\n                }\n                <div\n                    className={styles.messages}\n                    style={{\n                      filter: `blur(${isDragActive ? 4 : 0}px)`,\n                    }}\n                >\n                  <input id=\"files\" {...getInputProps()} />\n                  <div style={{flexBasis: \"100%\", flexGrow: 2, flexShrink: 1, overflowY: \"scroll\"}}>\n                    <ConversationsMessages\n                        identity={this.props.myIdentity}\n                        messages={this.state.messages}/>\n                  </div>\n                  <div>\n                    <Form onSubmit={this.sendMessage}>\n                      <Input.Group compact={true} style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"row\"\n                      }}>\n                        <Input\n                            style={{flexBasis: \"100%\"}}\n                            placeholder={\"Type your message here...\"}\n                            type={\"text\"}\n                            name={\"message\"}\n                            id={styles['type-a-message']}\n                            autoComplete={\"off\"}\n                            disabled={this.state.loadingState !== 'ready'}\n                            onChange={this.onMessageChanged}\n                            value={this.state.newMessage}\n                        />\n                        <Button icon=\"enter\" htmlType=\"submit\" type={\"submit\"}/>\n                      </Input.Group>\n                    </Form>\n                  </div>\n                </div>\n              </div>\n          )}\n\n        </Dropzone>\n    );\n  }\n}\n\nConversation.propTypes = {\n  myIdentity: PropTypes.string.isRequired\n};\n\nexport default Conversation;","import React from 'react';\nimport { Layout, Button, Input, Icon, Form, Row, Col, Card } from 'antd';\nimport { ReactComponent as Logo } from './assets/twilio-mark-red.svg';\n\nconst { Content } = Layout;\n\nexport class LoginPage extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const { form, onSubmit } = this.props;\n\n        form.validateFields((err, values) => {\n            if (!err) {\n                const { username } = values;\n                onSubmit(username);\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const usernameFieldDecorator = getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n        });\n\n        return (\n            <Layout>\n                <Content style={{ height: '100vh' }}>\n                    <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: '100%' }}>\n                        <Col span={12} offset={6}>\n                            <Card style={{ maxWidth: '404px' }}>\n                                <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ marginBottom: '30px' }}>\n                                    <Logo/>\n                                </Row>\n\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Item>\n                                        {usernameFieldDecorator(\n                                            <Input\n                                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                                                placeholder=\"Username\"\n                                            />,\n                                        )}\n                                    </Form.Item>\n                                    <Form.Item>\n                                        <Button block type=\"primary\" htmlType=\"submit\">\n                                            Sign in\n                                        </Button>\n                                    </Form.Item>\n                                </Form>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Content>\n            </Layout>\n        )\n    }\n}\n\nexport default Form.create({ name: 'login' })(LoginPage);\n","import React from 'react';\nimport { List, Typography } from \"antd\";\n\nimport conversationsListStyles from \"./assets/ConversationsList.module.css\";\nimport conversationsItemStyles from \"./assets/ConversationsItem.module.css\";\n\nimport { joinClassNames } from \"./utils/class-name\";\n\nconst { Text } = Typography;\n\nexport class ConversationsList extends React.Component {\n    render() {\n        const { conversations, selectedConversationSid, onConversationClick } = this.props;\n\n        return (\n            <List\n                header={\"Open Conversations\"}\n                className={conversationsListStyles['conversations-list']}\n                bordered={true}\n                loading={conversations.length === 0}\n                dataSource={conversations}\n                renderItem={item => {\n                    const activeChannel = item.sid === selectedConversationSid;\n                    const conversationItemClassName = joinClassNames([\n                        conversationsItemStyles['conversation-item'],\n                        activeChannel && conversationsItemStyles['conversation-item--active']\n                    ]);\n\n                    return (\n                        <List.Item\n                            key={item.sid}\n                            onClick={() => onConversationClick(item)}\n                            className={conversationItemClassName}\n                        >\n                            <Text\n                                strong\n                                className={conversationsItemStyles['conversation-item-text']}\n                            >\n                                {item.friendlyName || item.sid}\n                            </Text>\n                        </List.Item>\n                    )\n                }}\n            />\n        )\n    }\n}\n","export function joinClassNames(classNames) {\n    return classNames.filter(Boolean).join(' ');\n}\n","import React from 'react';\n\nexport const HeaderItem = ({ children, style }) => {\n    const finalStyle = { padding: '0 19px 0 19px', ...style};\n\n    return (\n        <div style={finalStyle}>\n            {children}\n        </div>\n    )\n};\n","import React from \"react\";\nimport { Badge, Icon, Layout, Spin, Typography } from \"antd\";\nimport { Client as ConversationsClient } from \"@twilio/conversations\";\n\nimport \"./assets/Conversation.css\";\nimport \"./assets/ConversationSection.css\";\nimport { ReactComponent as Logo } from \"./assets/twilio-mark-red.svg\";\n\nimport Conversation from \"./Conversation\";\nimport LoginPage from \"./LoginPage\";\nimport { ConversationsList } from \"./ConversationsList\";\nimport { HeaderItem } from \"./HeaderItem\";\n\nconst { Content, Sider, Header } = Layout;\nconst { Text } = Typography;\n\nclass ConversationsApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const name = localStorage.getItem(\"name\") || \"\";\n    const loggedIn = name !== \"\";\n\n    this.state = {\n      name,\n      loggedIn,\n      token: null,\n      statusString: null,\n      conversationsReady: false,\n      conversations: [],\n      selectedConversationSid: null,\n      newMessage: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn) {\n      this.getToken();\n      this.setState({ statusString: \"Fetching credentials…\" });\n    }\n  };\n\n  logIn = (name) => {\n    if (name !== \"\") {\n      localStorage.setItem(\"name\", name);\n      this.setState({ name, loggedIn: true }, this.getToken);\n    }\n  };\n\n  logOut = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.setState({\n      name: \"\",\n      loggedIn: false,\n      token: \"\",\n      conversationsReady: false,\n      messages: [],\n      newMessage: \"\",\n      conversations: []\n    });\n\n    localStorage.removeItem(\"name\");\n    this.conversationsClient.shutdown();\n  };\n\n  getToken = () => {\n    // Paste your unique Chat token function\n    const myToken = \"<Your token here>\";\n    this.setState({ token: myToken }, this.initConversations);\n  };\n\n  initConversations = async () => {\n    window.conversationsClient = ConversationsClient;\n    this.conversationsClient = await ConversationsClient.create(this.state.token);\n    this.setState({ statusString: \"Connecting to Twilio…\" });\n\n    this.conversationsClient.on(\"connectionStateChanged\", (state) => {\n      if (state === \"connecting\")\n        this.setState({\n          statusString: \"Connecting to Twilio…\",\n          status: \"default\"\n        });\n      if (state === \"connected\") {\n        this.setState({\n          statusString: \"You are connected.\",\n          status: \"success\"\n        });\n      }\n      if (state === \"disconnecting\")\n        this.setState({\n          statusString: \"Disconnecting from Twilio…\",\n          conversationsReady: false,\n          status: \"default\"\n        });\n      if (state === \"disconnected\")\n        this.setState({\n          statusString: \"Disconnected.\",\n          conversationsReady: false,\n          status: \"warning\"\n        });\n      if (state === \"denied\")\n        this.setState({\n          statusString: \"Failed to connect.\",\n          conversationsReady: false,\n          status: \"error\"\n        });\n    });\n    this.conversationsClient.on(\"conversationJoined\", (conversation) => {\n      this.setState({ conversations: [...this.state.conversations, conversation] });\n    });\n    this.conversationsClient.on(\"conversationLeft\", (thisConversation) => {\n      this.setState({\n        conversations: [...this.state.conversations.filter((it) => it !== thisConversation)]\n      });\n    });\n  };\n\n  render() {\n    const { conversations, selectedConversationSid, status } = this.state;\n    const selectedConversation = conversations.find(\n      (it) => it.sid === selectedConversationSid\n    );\n\n    let conversationContent;\n    if (selectedConversation) {\n      conversationContent = (\n        <Conversation\n          conversationProxy={selectedConversation}\n          myIdentity={this.state.name}\n        />\n      );\n    } else if (status !== \"success\") {\n      conversationContent = \"Loading your conversation!\";\n    } else {\n      conversationContent = \"\";\n    }\n\n    if (this.state.loggedIn) {\n      return (\n        <div className=\"conversations-window-wrapper\">\n          <Layout className=\"conversations-window-container\">\n            <Header\n              style={{ display: \"flex\", alignItems: \"center\", padding: 0 }}\n            >\n              <div\n                style={{\n                  maxWidth: \"250px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}\n              >\n                <HeaderItem style={{ paddingRight: \"0\", display: \"flex\" }}>\n                  <Logo />\n                </HeaderItem>\n                <HeaderItem>\n                  <Text strong style={{ color: \"white\" }}>\n                    Conversations\n                  </Text>\n                </HeaderItem>\n              </div>\n              <div style={{ display: \"flex\", width: \"100%\" }}>\n                <HeaderItem>\n                  <Text strong style={{ color: \"white\" }}>\n                    {selectedConversation &&\n                      (selectedConversation.friendlyName || selectedConversation.sid)}\n                  </Text>\n                </HeaderItem>\n                <HeaderItem style={{ float: \"right\", marginLeft: \"auto\" }}>\n                  <span\n                    style={{ color: \"white\" }}\n                  >{` ${this.state.statusString}`}</span>\n                  <Badge\n                    dot={true}\n                    status={this.state.status}\n                    style={{ marginLeft: \"1em\" }}\n                  />\n                </HeaderItem>\n                <HeaderItem>\n                  <Icon\n                    type=\"poweroff\"\n                    onClick={this.logOut}\n                    style={{\n                      color: \"white\",\n                      fontSize: \"20px\",\n                      marginLeft: \"auto\"\n                    }}\n                  />\n                </HeaderItem>\n              </div>\n            </Header>\n            <Layout>\n              <Sider theme={\"light\"} width={250}>\n                <ConversationsList\n                  conversations={conversations}\n                  selectedConversationSid={selectedConversationSid}\n                  onConversationClick={(item) => {\n                    this.setState({ selectedConversationSid: item.sid });\n                  }}\n                />\n              </Sider>\n              <Content className=\"conversation-section\">\n                <div id=\"SelectedConversation\">{conversationContent}</div>\n              </Content>\n            </Layout>\n          </Layout>\n        </div>\n      );\n    }\n\n    return <LoginPage onSubmit={this.logIn} />;\n  }\n}\n\nexport default ConversationsApp;\n","import React, { Component } from 'react';\nimport ConversationsApp from './ConversationsApp';\nimport './assets/App.css';\nimport 'antd/dist/antd.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    return <ConversationsApp />\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}